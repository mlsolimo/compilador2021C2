Terminals unused in grammar

   OP_SUM
   OP_DISTINTO
   DIGITO
   OP_DIVISIONISION


Gramática

    0 $accept: programa_final $end

    1 programa_final: programa

    2 programa: sentencia

    3 sentencia: sentencia gramatica PUNTO_COMA
    4          | gramatica PUNTO_COMA

    5 gramatica: dec_variable
    6          | asig
    7          | display
    8          | get
    9          | for
   10          | if
   11          | while
   12          | equmax
   13          | equmin

   14 dec_variable: DIM CORCHETE_A lista_asig CORCHETE_C

   15 lista_asig: VARIABLE COMA lista_asig COMA tipo
   16           | VARIABLE CORCHETE_A AS CORCHETE_A tipo

   17 tipo: TYPE_INTEGER
   18     | TYPE_FLOAT
   19     | TYPE_STRING

   20 asig: VARIABLE OP_ASIG expresion
   21     | VARIABLE OP_ASIG CONST_STRING
   22     | VARIABLE OP_ASIG CONST_REAL

   23 expresion: expresion OP_SUMA termino
   24          | expresion OP_RESTA termino
   25          | termino

   26 termino: termino OP_MULT factor
   27        | termino OP_DIVISION factor
   28        | factor

   29 factor: PARENTESIS_A expresion PARENTESIS_C
   30       | CONST_INT
   31       | VARIABLE

   32 display: DISPLAY CONST_STRING
   33        | DISPLAY CONST_REAL
   34        | DISPLAY expresion

   35 get: GET VARIABLE

   36 $@1: /* vacío */

   37 for: FOR VARIABLE OP_ASIG expresion TO expresion CORCHETE_A step CORCHETE_C $@1 NEXT VARIABLE

   38 step: CONST_INT
   39     | /* vacío */

   40 while: WHILE PARENTESIS_A cond_final PARENTESIS_C sentencia ENDWHILE

   41 $@2: /* vacío */

   42 if: IF cond_final sentencia $@2 ENDIF

   43 $@3: /* vacío */

   44 $@4: /* vacío */

   45 $@5: /* vacío */

   46 if: IF cond_final sentencia $@3 ELSE $@4 sentencia $@5 ENDIF

   47 $@6: /* vacío */

   48 if: IF cond_final ELSE $@6 ENDIF
   49   | IF cond_final ENDIF

   50 cond_final: PARENTESIS_A cond_final AND cond_final PARENTESIS_C
   51           | PARENTESIS_A cond AND cond_final PARENTESIS_C
   52           | PARENTESIS_A cond_final AND cond PARENTESIS_C
   53           | PARENTESIS_A cond_final OR cond_final PARENTESIS_C
   54           | PARENTESIS_A cond OR cond_final PARENTESIS_C
   55           | PARENTESIS_A cond_final OR cond PARENTESIS_C
   56           | PARENTESIS_A cond AND cond PARENTESIS_C
   57           | PARENTESIS_A cond OR cond PARENTESIS_C
   58           | NOT cond_final
   59           | PARENTESIS_A cond_final PARENTESIS_C
   60           | PARENTESIS_A cond PARENTESIS_C

   61 cond: expresion OP_COMP expresion
   62     | expresion OP_MAYORIGUAL expresion
   63     | expresion OP_MENORIGUAL expresion
   64     | expresion OP_MENOR expresion
   65     | expresion OP_MAYOR expresion
   66     | expresion AND expresion
   67     | expresion OR expresion
   68     | expresion NOT termino
   69     | NOT VARIABLE

   70 equmax: EQUMAX PARENTESIS_A expresion PUNTO_COMA CORCHETE_A lista CORCHETE_C PARENTESIS_C

   71 equmin: EQUMIN PARENTESIS_A expresion PUNTO_COMA CORCHETE_A lista CORCHETE_C PARENTESIS_C

   72 lista: expr_list
   73      | lista COMA expr_list

   74 expr_list: CONST_INT
   75          | CONST_REAL
   76          | CONST_STRING
   77          | VARIABLE


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
DIM (258) 14
AS (259) 16
OP_MENOR (260) 64
OP_MAYOR (261) 65
OP_ASIG (262) 20 21 22 37
OP_SUM (263)
OP_DIVISION (264) 27
OP_RESTA (265) 24
OP_MULT (266) 26
OP_COMP (267) 61
OP_MAYORIGUAL (268) 62
OP_MENORIGUAL (269) 63
OP_DISTINTO (270)
VARIABLE (271) 15 16 20 21 22 31 35 37 69 77
COMA (272) 15 73
TYPE_INTEGER (273) 17
TYPE_FLOAT (274) 18
TYPE_STRING (275) 19
DISPLAY (276) 32 33 34
CONST_STRING (277) 21 32 76
CONST_INT (278) 30 38 74
CONST_REAL (279) 22 33 75
DIGITO (280)
GET (281) 35
WHILE (282) 40
ENDWHILE (283) 40
IF (284) 42 46 48 49
ELSE (285) 46 48
ENDIF (286) 42 46 48 49
PUNTO_COMA (287) 3 4 70 71
PARENTESIS_A (288) 29 40 50 51 52 53 54 55 56 57 59 60 70 71
PARENTESIS_C (289) 29 40 50 51 52 53 54 55 56 57 59 60 70 71
CORCHETE_A (290) 14 16 37 70 71
CORCHETE_C (291) 14 37 70 71
FOR (292) 37
TO (293) 37
NEXT (294) 37
EQUMIN (295) 71
EQUMAX (296) 70
AND (297) 50 51 52 56 66
OR (298) 53 54 55 57 67
NOT (299) 58 68 69
OP_SUMA (300) 23
OP_DIVISIONISION (301)


No terminales con las reglas donde aparecen

$accept (47)
    en la izquierda: 0
programa_final (48)
    en la izquierda: 1, en la derecha: 0
programa (49)
    en la izquierda: 2, en la derecha: 1
sentencia (50)
    en la izquierda: 3 4, en la derecha: 2 3 40 42 46
gramatica (51)
    en la izquierda: 5 6 7 8 9 10 11 12 13, en la derecha: 3 4
dec_variable (52)
    en la izquierda: 14, en la derecha: 5
lista_asig (53)
    en la izquierda: 15 16, en la derecha: 14 15
tipo (54)
    en la izquierda: 17 18 19, en la derecha: 15 16
asig (55)
    en la izquierda: 20 21 22, en la derecha: 6
expresion (56)
    en la izquierda: 23 24 25, en la derecha: 20 23 24 29 34 37 61
    62 63 64 65 66 67 68 70 71
termino (57)
    en la izquierda: 26 27 28, en la derecha: 23 24 25 26 27 68
factor (58)
    en la izquierda: 29 30 31, en la derecha: 26 27 28
display (59)
    en la izquierda: 32 33 34, en la derecha: 7
get (60)
    en la izquierda: 35, en la derecha: 8
for (61)
    en la izquierda: 37, en la derecha: 9
$@1 (62)
    en la izquierda: 36, en la derecha: 37
step (63)
    en la izquierda: 38 39, en la derecha: 37
while (64)
    en la izquierda: 40, en la derecha: 11
if (65)
    en la izquierda: 42 46 48 49, en la derecha: 10
$@2 (66)
    en la izquierda: 41, en la derecha: 42
$@3 (67)
    en la izquierda: 43, en la derecha: 46
$@4 (68)
    en la izquierda: 44, en la derecha: 46
$@5 (69)
    en la izquierda: 45, en la derecha: 46
$@6 (70)
    en la izquierda: 47, en la derecha: 48
cond_final (71)
    en la izquierda: 50 51 52 53 54 55 56 57 58 59 60, en la derecha:
    40 42 46 48 49 50 51 52 53 54 55 58 59
cond (72)
    en la izquierda: 61 62 63 64 65 66 67 68 69, en la derecha: 51
    52 54 55 56 57 60
equmax (73)
    en la izquierda: 70, en la derecha: 12
equmin (74)
    en la izquierda: 71, en la derecha: 13
lista (75)
    en la izquierda: 72 73, en la derecha: 70 71 73
expr_list (76)
    en la izquierda: 74 75 76 77, en la derecha: 72 73


estado 0

    0 $accept: . programa_final $end

    DIM       desplazar e ir al estado 1
    VARIABLE  desplazar e ir al estado 2
    DISPLAY   desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    WHILE     desplazar e ir al estado 5
    IF        desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7
    EQUMIN    desplazar e ir al estado 8
    EQUMAX    desplazar e ir al estado 9

    programa_final  ir al estado 10
    programa        ir al estado 11
    sentencia       ir al estado 12
    gramatica       ir al estado 13
    dec_variable    ir al estado 14
    asig            ir al estado 15
    display         ir al estado 16
    get             ir al estado 17
    for             ir al estado 18
    while           ir al estado 19
    if              ir al estado 20
    equmax          ir al estado 21
    equmin          ir al estado 22


estado 1

   14 dec_variable: DIM . CORCHETE_A lista_asig CORCHETE_C

    CORCHETE_A  desplazar e ir al estado 23


estado 2

   20 asig: VARIABLE . OP_ASIG expresion
   21     | VARIABLE . OP_ASIG CONST_STRING
   22     | VARIABLE . OP_ASIG CONST_REAL

    OP_ASIG  desplazar e ir al estado 24


estado 3

   32 display: DISPLAY . CONST_STRING
   33        | DISPLAY . CONST_REAL
   34        | DISPLAY . expresion

    VARIABLE      desplazar e ir al estado 25
    CONST_STRING  desplazar e ir al estado 26
    CONST_INT     desplazar e ir al estado 27
    CONST_REAL    desplazar e ir al estado 28
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 30
    termino    ir al estado 31
    factor     ir al estado 32


estado 4

   35 get: GET . VARIABLE

    VARIABLE  desplazar e ir al estado 33


estado 5

   40 while: WHILE . PARENTESIS_A cond_final PARENTESIS_C sentencia ENDWHILE

    PARENTESIS_A  desplazar e ir al estado 34


estado 6

   42 if: IF . cond_final sentencia $@2 ENDIF
   46   | IF . cond_final sentencia $@3 ELSE $@4 sentencia $@5 ENDIF
   48   | IF . cond_final ELSE $@6 ENDIF
   49   | IF . cond_final ENDIF

    PARENTESIS_A  desplazar e ir al estado 35
    NOT           desplazar e ir al estado 36

    cond_final  ir al estado 37


estado 7

   37 for: FOR . VARIABLE OP_ASIG expresion TO expresion CORCHETE_A step CORCHETE_C $@1 NEXT VARIABLE

    VARIABLE  desplazar e ir al estado 38


estado 8

   71 equmin: EQUMIN . PARENTESIS_A expresion PUNTO_COMA CORCHETE_A lista CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 39


estado 9

   70 equmax: EQUMAX . PARENTESIS_A expresion PUNTO_COMA CORCHETE_A lista CORCHETE_C PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 40


estado 10

    0 $accept: programa_final . $end

    $end  desplazar e ir al estado 41


estado 11

    1 programa_final: programa .

    $default  reduce usando la regla 1 (programa_final)


estado 12

    2 programa: sentencia .
    3 sentencia: sentencia . gramatica PUNTO_COMA

    DIM       desplazar e ir al estado 1
    VARIABLE  desplazar e ir al estado 2
    DISPLAY   desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    WHILE     desplazar e ir al estado 5
    IF        desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7
    EQUMIN    desplazar e ir al estado 8
    EQUMAX    desplazar e ir al estado 9

    $default  reduce usando la regla 2 (programa)

    gramatica     ir al estado 42
    dec_variable  ir al estado 14
    asig          ir al estado 15
    display       ir al estado 16
    get           ir al estado 17
    for           ir al estado 18
    while         ir al estado 19
    if            ir al estado 20
    equmax        ir al estado 21
    equmin        ir al estado 22


estado 13

    4 sentencia: gramatica . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 43


estado 14

    5 gramatica: dec_variable .

    $default  reduce usando la regla 5 (gramatica)


estado 15

    6 gramatica: asig .

    $default  reduce usando la regla 6 (gramatica)


estado 16

    7 gramatica: display .

    $default  reduce usando la regla 7 (gramatica)


estado 17

    8 gramatica: get .

    $default  reduce usando la regla 8 (gramatica)


estado 18

    9 gramatica: for .

    $default  reduce usando la regla 9 (gramatica)


estado 19

   11 gramatica: while .

    $default  reduce usando la regla 11 (gramatica)


estado 20

   10 gramatica: if .

    $default  reduce usando la regla 10 (gramatica)


estado 21

   12 gramatica: equmax .

    $default  reduce usando la regla 12 (gramatica)


estado 22

   13 gramatica: equmin .

    $default  reduce usando la regla 13 (gramatica)


estado 23

   14 dec_variable: DIM CORCHETE_A . lista_asig CORCHETE_C

    VARIABLE  desplazar e ir al estado 44

    lista_asig  ir al estado 45


estado 24

   20 asig: VARIABLE OP_ASIG . expresion
   21     | VARIABLE OP_ASIG . CONST_STRING
   22     | VARIABLE OP_ASIG . CONST_REAL

    VARIABLE      desplazar e ir al estado 25
    CONST_STRING  desplazar e ir al estado 46
    CONST_INT     desplazar e ir al estado 27
    CONST_REAL    desplazar e ir al estado 47
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 48
    termino    ir al estado 31
    factor     ir al estado 32


estado 25

   31 factor: VARIABLE .

    $default  reduce usando la regla 31 (factor)


estado 26

   32 display: DISPLAY CONST_STRING .

    $default  reduce usando la regla 32 (display)


estado 27

   30 factor: CONST_INT .

    $default  reduce usando la regla 30 (factor)


estado 28

   33 display: DISPLAY CONST_REAL .

    $default  reduce usando la regla 33 (display)


estado 29

   29 factor: PARENTESIS_A . expresion PARENTESIS_C

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 49
    termino    ir al estado 31
    factor     ir al estado 32


estado 30

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   34 display: DISPLAY expresion .

    OP_RESTA  desplazar e ir al estado 50
    OP_SUMA   desplazar e ir al estado 51

    $default  reduce usando la regla 34 (display)


estado 31

   25 expresion: termino .
   26 termino: termino . OP_MULT factor
   27        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 52
    OP_MULT      desplazar e ir al estado 53

    $default  reduce usando la regla 25 (expresion)


estado 32

   28 termino: factor .

    $default  reduce usando la regla 28 (termino)


estado 33

   35 get: GET VARIABLE .

    $default  reduce usando la regla 35 (get)


estado 34

   40 while: WHILE PARENTESIS_A . cond_final PARENTESIS_C sentencia ENDWHILE

    PARENTESIS_A  desplazar e ir al estado 35
    NOT           desplazar e ir al estado 36

    cond_final  ir al estado 54


estado 35

   50 cond_final: PARENTESIS_A . cond_final AND cond_final PARENTESIS_C
   51           | PARENTESIS_A . cond AND cond_final PARENTESIS_C
   52           | PARENTESIS_A . cond_final AND cond PARENTESIS_C
   53           | PARENTESIS_A . cond_final OR cond_final PARENTESIS_C
   54           | PARENTESIS_A . cond OR cond_final PARENTESIS_C
   55           | PARENTESIS_A . cond_final OR cond PARENTESIS_C
   56           | PARENTESIS_A . cond AND cond PARENTESIS_C
   57           | PARENTESIS_A . cond OR cond PARENTESIS_C
   59           | PARENTESIS_A . cond_final PARENTESIS_C
   60           | PARENTESIS_A . cond PARENTESIS_C

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 55
    NOT           desplazar e ir al estado 56

    expresion   ir al estado 57
    termino     ir al estado 31
    factor      ir al estado 32
    cond_final  ir al estado 58
    cond        ir al estado 59


estado 36

   58 cond_final: NOT . cond_final

    PARENTESIS_A  desplazar e ir al estado 35
    NOT           desplazar e ir al estado 36

    cond_final  ir al estado 60


estado 37

   42 if: IF cond_final . sentencia $@2 ENDIF
   46   | IF cond_final . sentencia $@3 ELSE $@4 sentencia $@5 ENDIF
   48   | IF cond_final . ELSE $@6 ENDIF
   49   | IF cond_final . ENDIF

    DIM       desplazar e ir al estado 1
    VARIABLE  desplazar e ir al estado 2
    DISPLAY   desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    WHILE     desplazar e ir al estado 5
    IF        desplazar e ir al estado 6
    ELSE      desplazar e ir al estado 61
    ENDIF     desplazar e ir al estado 62
    FOR       desplazar e ir al estado 7
    EQUMIN    desplazar e ir al estado 8
    EQUMAX    desplazar e ir al estado 9

    sentencia     ir al estado 63
    gramatica     ir al estado 13
    dec_variable  ir al estado 14
    asig          ir al estado 15
    display       ir al estado 16
    get           ir al estado 17
    for           ir al estado 18
    while         ir al estado 19
    if            ir al estado 20
    equmax        ir al estado 21
    equmin        ir al estado 22


estado 38

   37 for: FOR VARIABLE . OP_ASIG expresion TO expresion CORCHETE_A step CORCHETE_C $@1 NEXT VARIABLE

    OP_ASIG  desplazar e ir al estado 64


estado 39

   71 equmin: EQUMIN PARENTESIS_A . expresion PUNTO_COMA CORCHETE_A lista CORCHETE_C PARENTESIS_C

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 65
    termino    ir al estado 31
    factor     ir al estado 32


estado 40

   70 equmax: EQUMAX PARENTESIS_A . expresion PUNTO_COMA CORCHETE_A lista CORCHETE_C PARENTESIS_C

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 66
    termino    ir al estado 31
    factor     ir al estado 32


estado 41

    0 $accept: programa_final $end .

    $default  aceptar


estado 42

    3 sentencia: sentencia gramatica . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 67


estado 43

    4 sentencia: gramatica PUNTO_COMA .

    $default  reduce usando la regla 4 (sentencia)


estado 44

   15 lista_asig: VARIABLE . COMA lista_asig COMA tipo
   16           | VARIABLE . CORCHETE_A AS CORCHETE_A tipo

    COMA        desplazar e ir al estado 68
    CORCHETE_A  desplazar e ir al estado 69


estado 45

   14 dec_variable: DIM CORCHETE_A lista_asig . CORCHETE_C

    CORCHETE_C  desplazar e ir al estado 70


estado 46

   21 asig: VARIABLE OP_ASIG CONST_STRING .

    $default  reduce usando la regla 21 (asig)


estado 47

   22 asig: VARIABLE OP_ASIG CONST_REAL .

    $default  reduce usando la regla 22 (asig)


estado 48

   20 asig: VARIABLE OP_ASIG expresion .
   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino

    OP_RESTA  desplazar e ir al estado 50
    OP_SUMA   desplazar e ir al estado 51

    $default  reduce usando la regla 20 (asig)


estado 49

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   29 factor: PARENTESIS_A expresion . PARENTESIS_C

    OP_RESTA      desplazar e ir al estado 50
    PARENTESIS_C  desplazar e ir al estado 71
    OP_SUMA       desplazar e ir al estado 51


estado 50

   24 expresion: expresion OP_RESTA . termino

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    termino  ir al estado 72
    factor   ir al estado 32


estado 51

   23 expresion: expresion OP_SUMA . termino

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    termino  ir al estado 73
    factor   ir al estado 32


estado 52

   27 termino: termino OP_DIVISION . factor

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    factor  ir al estado 74


estado 53

   26 termino: termino OP_MULT . factor

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    factor  ir al estado 75


estado 54

   40 while: WHILE PARENTESIS_A cond_final . PARENTESIS_C sentencia ENDWHILE

    PARENTESIS_C  desplazar e ir al estado 76


estado 55

   29 factor: PARENTESIS_A . expresion PARENTESIS_C
   50 cond_final: PARENTESIS_A . cond_final AND cond_final PARENTESIS_C
   51           | PARENTESIS_A . cond AND cond_final PARENTESIS_C
   52           | PARENTESIS_A . cond_final AND cond PARENTESIS_C
   53           | PARENTESIS_A . cond_final OR cond_final PARENTESIS_C
   54           | PARENTESIS_A . cond OR cond_final PARENTESIS_C
   55           | PARENTESIS_A . cond_final OR cond PARENTESIS_C
   56           | PARENTESIS_A . cond AND cond PARENTESIS_C
   57           | PARENTESIS_A . cond OR cond PARENTESIS_C
   59           | PARENTESIS_A . cond_final PARENTESIS_C
   60           | PARENTESIS_A . cond PARENTESIS_C

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 55
    NOT           desplazar e ir al estado 56

    expresion   ir al estado 77
    termino     ir al estado 31
    factor      ir al estado 32
    cond_final  ir al estado 58
    cond        ir al estado 59


estado 56

   58 cond_final: NOT . cond_final
   69 cond: NOT . VARIABLE

    VARIABLE      desplazar e ir al estado 78
    PARENTESIS_A  desplazar e ir al estado 35
    NOT           desplazar e ir al estado 36

    cond_final  ir al estado 60


estado 57

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   61 cond: expresion . OP_COMP expresion
   62     | expresion . OP_MAYORIGUAL expresion
   63     | expresion . OP_MENORIGUAL expresion
   64     | expresion . OP_MENOR expresion
   65     | expresion . OP_MAYOR expresion
   66     | expresion . AND expresion
   67     | expresion . OR expresion
   68     | expresion . NOT termino

    OP_MENOR       desplazar e ir al estado 79
    OP_MAYOR       desplazar e ir al estado 80
    OP_RESTA       desplazar e ir al estado 50
    OP_COMP        desplazar e ir al estado 81
    OP_MAYORIGUAL  desplazar e ir al estado 82
    OP_MENORIGUAL  desplazar e ir al estado 83
    AND            desplazar e ir al estado 84
    OR             desplazar e ir al estado 85
    NOT            desplazar e ir al estado 86
    OP_SUMA        desplazar e ir al estado 51


estado 58

   50 cond_final: PARENTESIS_A cond_final . AND cond_final PARENTESIS_C
   52           | PARENTESIS_A cond_final . AND cond PARENTESIS_C
   53           | PARENTESIS_A cond_final . OR cond_final PARENTESIS_C
   55           | PARENTESIS_A cond_final . OR cond PARENTESIS_C
   59           | PARENTESIS_A cond_final . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 87
    AND           desplazar e ir al estado 88
    OR            desplazar e ir al estado 89


estado 59

   51 cond_final: PARENTESIS_A cond . AND cond_final PARENTESIS_C
   54           | PARENTESIS_A cond . OR cond_final PARENTESIS_C
   56           | PARENTESIS_A cond . AND cond PARENTESIS_C
   57           | PARENTESIS_A cond . OR cond PARENTESIS_C
   60           | PARENTESIS_A cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 90
    AND           desplazar e ir al estado 91
    OR            desplazar e ir al estado 92


estado 60

   58 cond_final: NOT cond_final .

    $default  reduce usando la regla 58 (cond_final)


estado 61

   48 if: IF cond_final ELSE . $@6 ENDIF

    $default  reduce usando la regla 47 ($@6)

    $@6  ir al estado 93


estado 62

   49 if: IF cond_final ENDIF .

    $default  reduce usando la regla 49 (if)


estado 63

    3 sentencia: sentencia . gramatica PUNTO_COMA
   42 if: IF cond_final sentencia . $@2 ENDIF
   46   | IF cond_final sentencia . $@3 ELSE $@4 sentencia $@5 ENDIF

    DIM       desplazar e ir al estado 1
    VARIABLE  desplazar e ir al estado 2
    DISPLAY   desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    WHILE     desplazar e ir al estado 5
    IF        desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7
    EQUMIN    desplazar e ir al estado 8
    EQUMAX    desplazar e ir al estado 9

    ELSE      reduce usando la regla 43 ($@3)
    $default  reduce usando la regla 41 ($@2)

    gramatica     ir al estado 42
    dec_variable  ir al estado 14
    asig          ir al estado 15
    display       ir al estado 16
    get           ir al estado 17
    for           ir al estado 18
    while         ir al estado 19
    if            ir al estado 20
    $@2           ir al estado 94
    $@3           ir al estado 95
    equmax        ir al estado 21
    equmin        ir al estado 22


estado 64

   37 for: FOR VARIABLE OP_ASIG . expresion TO expresion CORCHETE_A step CORCHETE_C $@1 NEXT VARIABLE

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 96
    termino    ir al estado 31
    factor     ir al estado 32


estado 65

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   71 equmin: EQUMIN PARENTESIS_A expresion . PUNTO_COMA CORCHETE_A lista CORCHETE_C PARENTESIS_C

    OP_RESTA    desplazar e ir al estado 50
    PUNTO_COMA  desplazar e ir al estado 97
    OP_SUMA     desplazar e ir al estado 51


estado 66

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   70 equmax: EQUMAX PARENTESIS_A expresion . PUNTO_COMA CORCHETE_A lista CORCHETE_C PARENTESIS_C

    OP_RESTA    desplazar e ir al estado 50
    PUNTO_COMA  desplazar e ir al estado 98
    OP_SUMA     desplazar e ir al estado 51


estado 67

    3 sentencia: sentencia gramatica PUNTO_COMA .

    $default  reduce usando la regla 3 (sentencia)


estado 68

   15 lista_asig: VARIABLE COMA . lista_asig COMA tipo

    VARIABLE  desplazar e ir al estado 44

    lista_asig  ir al estado 99


estado 69

   16 lista_asig: VARIABLE CORCHETE_A . AS CORCHETE_A tipo

    AS  desplazar e ir al estado 100


estado 70

   14 dec_variable: DIM CORCHETE_A lista_asig CORCHETE_C .

    $default  reduce usando la regla 14 (dec_variable)


estado 71

   29 factor: PARENTESIS_A expresion PARENTESIS_C .

    $default  reduce usando la regla 29 (factor)


estado 72

   24 expresion: expresion OP_RESTA termino .
   26 termino: termino . OP_MULT factor
   27        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 52
    OP_MULT      desplazar e ir al estado 53

    $default  reduce usando la regla 24 (expresion)


estado 73

   23 expresion: expresion OP_SUMA termino .
   26 termino: termino . OP_MULT factor
   27        | termino . OP_DIVISION factor

    OP_DIVISION  desplazar e ir al estado 52
    OP_MULT      desplazar e ir al estado 53

    $default  reduce usando la regla 23 (expresion)


estado 74

   27 termino: termino OP_DIVISION factor .

    $default  reduce usando la regla 27 (termino)


estado 75

   26 termino: termino OP_MULT factor .

    $default  reduce usando la regla 26 (termino)


estado 76

   40 while: WHILE PARENTESIS_A cond_final PARENTESIS_C . sentencia ENDWHILE

    DIM       desplazar e ir al estado 1
    VARIABLE  desplazar e ir al estado 2
    DISPLAY   desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    WHILE     desplazar e ir al estado 5
    IF        desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7
    EQUMIN    desplazar e ir al estado 8
    EQUMAX    desplazar e ir al estado 9

    sentencia     ir al estado 101
    gramatica     ir al estado 13
    dec_variable  ir al estado 14
    asig          ir al estado 15
    display       ir al estado 16
    get           ir al estado 17
    for           ir al estado 18
    while         ir al estado 19
    if            ir al estado 20
    equmax        ir al estado 21
    equmin        ir al estado 22


estado 77

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   29 factor: PARENTESIS_A expresion . PARENTESIS_C
   61 cond: expresion . OP_COMP expresion
   62     | expresion . OP_MAYORIGUAL expresion
   63     | expresion . OP_MENORIGUAL expresion
   64     | expresion . OP_MENOR expresion
   65     | expresion . OP_MAYOR expresion
   66     | expresion . AND expresion
   67     | expresion . OR expresion
   68     | expresion . NOT termino

    OP_MENOR       desplazar e ir al estado 79
    OP_MAYOR       desplazar e ir al estado 80
    OP_RESTA       desplazar e ir al estado 50
    OP_COMP        desplazar e ir al estado 81
    OP_MAYORIGUAL  desplazar e ir al estado 82
    OP_MENORIGUAL  desplazar e ir al estado 83
    PARENTESIS_C   desplazar e ir al estado 71
    AND            desplazar e ir al estado 84
    OR             desplazar e ir al estado 85
    NOT            desplazar e ir al estado 86
    OP_SUMA        desplazar e ir al estado 51


estado 78

   69 cond: NOT VARIABLE .

    $default  reduce usando la regla 69 (cond)


estado 79

   64 cond: expresion OP_MENOR . expresion

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 102
    termino    ir al estado 31
    factor     ir al estado 32


estado 80

   65 cond: expresion OP_MAYOR . expresion

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 103
    termino    ir al estado 31
    factor     ir al estado 32


estado 81

   61 cond: expresion OP_COMP . expresion

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 104
    termino    ir al estado 31
    factor     ir al estado 32


estado 82

   62 cond: expresion OP_MAYORIGUAL . expresion

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 105
    termino    ir al estado 31
    factor     ir al estado 32


estado 83

   63 cond: expresion OP_MENORIGUAL . expresion

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 106
    termino    ir al estado 31
    factor     ir al estado 32


estado 84

   66 cond: expresion AND . expresion

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 107
    termino    ir al estado 31
    factor     ir al estado 32


estado 85

   67 cond: expresion OR . expresion

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 108
    termino    ir al estado 31
    factor     ir al estado 32


estado 86

   68 cond: expresion NOT . termino

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    termino  ir al estado 109
    factor   ir al estado 32


estado 87

   59 cond_final: PARENTESIS_A cond_final PARENTESIS_C .

    $default  reduce usando la regla 59 (cond_final)


estado 88

   50 cond_final: PARENTESIS_A cond_final AND . cond_final PARENTESIS_C
   52           | PARENTESIS_A cond_final AND . cond PARENTESIS_C

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 55
    NOT           desplazar e ir al estado 56

    expresion   ir al estado 57
    termino     ir al estado 31
    factor      ir al estado 32
    cond_final  ir al estado 110
    cond        ir al estado 111


estado 89

   53 cond_final: PARENTESIS_A cond_final OR . cond_final PARENTESIS_C
   55           | PARENTESIS_A cond_final OR . cond PARENTESIS_C

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 55
    NOT           desplazar e ir al estado 56

    expresion   ir al estado 57
    termino     ir al estado 31
    factor      ir al estado 32
    cond_final  ir al estado 112
    cond        ir al estado 113


estado 90

   60 cond_final: PARENTESIS_A cond PARENTESIS_C .

    $default  reduce usando la regla 60 (cond_final)


estado 91

   51 cond_final: PARENTESIS_A cond AND . cond_final PARENTESIS_C
   56           | PARENTESIS_A cond AND . cond PARENTESIS_C

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 55
    NOT           desplazar e ir al estado 56

    expresion   ir al estado 57
    termino     ir al estado 31
    factor      ir al estado 32
    cond_final  ir al estado 114
    cond        ir al estado 115


estado 92

   54 cond_final: PARENTESIS_A cond OR . cond_final PARENTESIS_C
   57           | PARENTESIS_A cond OR . cond PARENTESIS_C

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 55
    NOT           desplazar e ir al estado 56

    expresion   ir al estado 57
    termino     ir al estado 31
    factor      ir al estado 32
    cond_final  ir al estado 116
    cond        ir al estado 117


estado 93

   48 if: IF cond_final ELSE $@6 . ENDIF

    ENDIF  desplazar e ir al estado 118


estado 94

   42 if: IF cond_final sentencia $@2 . ENDIF

    ENDIF  desplazar e ir al estado 119


estado 95

   46 if: IF cond_final sentencia $@3 . ELSE $@4 sentencia $@5 ENDIF

    ELSE  desplazar e ir al estado 120


estado 96

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   37 for: FOR VARIABLE OP_ASIG expresion . TO expresion CORCHETE_A step CORCHETE_C $@1 NEXT VARIABLE

    OP_RESTA  desplazar e ir al estado 50
    TO        desplazar e ir al estado 121
    OP_SUMA   desplazar e ir al estado 51


estado 97

   71 equmin: EQUMIN PARENTESIS_A expresion PUNTO_COMA . CORCHETE_A lista CORCHETE_C PARENTESIS_C

    CORCHETE_A  desplazar e ir al estado 122


estado 98

   70 equmax: EQUMAX PARENTESIS_A expresion PUNTO_COMA . CORCHETE_A lista CORCHETE_C PARENTESIS_C

    CORCHETE_A  desplazar e ir al estado 123


estado 99

   15 lista_asig: VARIABLE COMA lista_asig . COMA tipo

    COMA  desplazar e ir al estado 124


estado 100

   16 lista_asig: VARIABLE CORCHETE_A AS . CORCHETE_A tipo

    CORCHETE_A  desplazar e ir al estado 125


estado 101

    3 sentencia: sentencia . gramatica PUNTO_COMA
   40 while: WHILE PARENTESIS_A cond_final PARENTESIS_C sentencia . ENDWHILE

    DIM       desplazar e ir al estado 1
    VARIABLE  desplazar e ir al estado 2
    DISPLAY   desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    WHILE     desplazar e ir al estado 5
    ENDWHILE  desplazar e ir al estado 126
    IF        desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7
    EQUMIN    desplazar e ir al estado 8
    EQUMAX    desplazar e ir al estado 9

    gramatica     ir al estado 42
    dec_variable  ir al estado 14
    asig          ir al estado 15
    display       ir al estado 16
    get           ir al estado 17
    for           ir al estado 18
    while         ir al estado 19
    if            ir al estado 20
    equmax        ir al estado 21
    equmin        ir al estado 22


estado 102

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   64 cond: expresion OP_MENOR expresion .

    OP_RESTA  desplazar e ir al estado 50
    OP_SUMA   desplazar e ir al estado 51

    $default  reduce usando la regla 64 (cond)


estado 103

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   65 cond: expresion OP_MAYOR expresion .

    OP_RESTA  desplazar e ir al estado 50
    OP_SUMA   desplazar e ir al estado 51

    $default  reduce usando la regla 65 (cond)


estado 104

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   61 cond: expresion OP_COMP expresion .

    OP_RESTA  desplazar e ir al estado 50
    OP_SUMA   desplazar e ir al estado 51

    $default  reduce usando la regla 61 (cond)


estado 105

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   62 cond: expresion OP_MAYORIGUAL expresion .

    OP_RESTA  desplazar e ir al estado 50
    OP_SUMA   desplazar e ir al estado 51

    $default  reduce usando la regla 62 (cond)


estado 106

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   63 cond: expresion OP_MENORIGUAL expresion .

    OP_RESTA  desplazar e ir al estado 50
    OP_SUMA   desplazar e ir al estado 51

    $default  reduce usando la regla 63 (cond)


estado 107

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   66 cond: expresion AND expresion .

    OP_RESTA  desplazar e ir al estado 50
    OP_SUMA   desplazar e ir al estado 51

    $default  reduce usando la regla 66 (cond)


estado 108

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   67 cond: expresion OR expresion .

    OP_RESTA  desplazar e ir al estado 50
    OP_SUMA   desplazar e ir al estado 51

    $default  reduce usando la regla 67 (cond)


estado 109

   26 termino: termino . OP_MULT factor
   27        | termino . OP_DIVISION factor
   68 cond: expresion NOT termino .

    OP_DIVISION  desplazar e ir al estado 52
    OP_MULT      desplazar e ir al estado 53

    $default  reduce usando la regla 68 (cond)


estado 110

   50 cond_final: PARENTESIS_A cond_final AND cond_final . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 127


estado 111

   52 cond_final: PARENTESIS_A cond_final AND cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 128


estado 112

   53 cond_final: PARENTESIS_A cond_final OR cond_final . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 129


estado 113

   55 cond_final: PARENTESIS_A cond_final OR cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 130


estado 114

   51 cond_final: PARENTESIS_A cond AND cond_final . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 131


estado 115

   56 cond_final: PARENTESIS_A cond AND cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 132


estado 116

   54 cond_final: PARENTESIS_A cond OR cond_final . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 133


estado 117

   57 cond_final: PARENTESIS_A cond OR cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 134


estado 118

   48 if: IF cond_final ELSE $@6 ENDIF .

    $default  reduce usando la regla 48 (if)


estado 119

   42 if: IF cond_final sentencia $@2 ENDIF .

    $default  reduce usando la regla 42 (if)


estado 120

   46 if: IF cond_final sentencia $@3 ELSE . $@4 sentencia $@5 ENDIF

    $default  reduce usando la regla 44 ($@4)

    $@4  ir al estado 135


estado 121

   37 for: FOR VARIABLE OP_ASIG expresion TO . expresion CORCHETE_A step CORCHETE_C $@1 NEXT VARIABLE

    VARIABLE      desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 27
    PARENTESIS_A  desplazar e ir al estado 29

    expresion  ir al estado 136
    termino    ir al estado 31
    factor     ir al estado 32


estado 122

   71 equmin: EQUMIN PARENTESIS_A expresion PUNTO_COMA CORCHETE_A . lista CORCHETE_C PARENTESIS_C

    VARIABLE      desplazar e ir al estado 137
    CONST_STRING  desplazar e ir al estado 138
    CONST_INT     desplazar e ir al estado 139
    CONST_REAL    desplazar e ir al estado 140

    lista      ir al estado 141
    expr_list  ir al estado 142


estado 123

   70 equmax: EQUMAX PARENTESIS_A expresion PUNTO_COMA CORCHETE_A . lista CORCHETE_C PARENTESIS_C

    VARIABLE      desplazar e ir al estado 137
    CONST_STRING  desplazar e ir al estado 138
    CONST_INT     desplazar e ir al estado 139
    CONST_REAL    desplazar e ir al estado 140

    lista      ir al estado 143
    expr_list  ir al estado 142


estado 124

   15 lista_asig: VARIABLE COMA lista_asig COMA . tipo

    TYPE_INTEGER  desplazar e ir al estado 144
    TYPE_FLOAT    desplazar e ir al estado 145
    TYPE_STRING   desplazar e ir al estado 146

    tipo  ir al estado 147


estado 125

   16 lista_asig: VARIABLE CORCHETE_A AS CORCHETE_A . tipo

    TYPE_INTEGER  desplazar e ir al estado 144
    TYPE_FLOAT    desplazar e ir al estado 145
    TYPE_STRING   desplazar e ir al estado 146

    tipo  ir al estado 148


estado 126

   40 while: WHILE PARENTESIS_A cond_final PARENTESIS_C sentencia ENDWHILE .

    $default  reduce usando la regla 40 (while)


estado 127

   50 cond_final: PARENTESIS_A cond_final AND cond_final PARENTESIS_C .

    $default  reduce usando la regla 50 (cond_final)


estado 128

   52 cond_final: PARENTESIS_A cond_final AND cond PARENTESIS_C .

    $default  reduce usando la regla 52 (cond_final)


estado 129

   53 cond_final: PARENTESIS_A cond_final OR cond_final PARENTESIS_C .

    $default  reduce usando la regla 53 (cond_final)


estado 130

   55 cond_final: PARENTESIS_A cond_final OR cond PARENTESIS_C .

    $default  reduce usando la regla 55 (cond_final)


estado 131

   51 cond_final: PARENTESIS_A cond AND cond_final PARENTESIS_C .

    $default  reduce usando la regla 51 (cond_final)


estado 132

   56 cond_final: PARENTESIS_A cond AND cond PARENTESIS_C .

    $default  reduce usando la regla 56 (cond_final)


estado 133

   54 cond_final: PARENTESIS_A cond OR cond_final PARENTESIS_C .

    $default  reduce usando la regla 54 (cond_final)


estado 134

   57 cond_final: PARENTESIS_A cond OR cond PARENTESIS_C .

    $default  reduce usando la regla 57 (cond_final)


estado 135

   46 if: IF cond_final sentencia $@3 ELSE $@4 . sentencia $@5 ENDIF

    DIM       desplazar e ir al estado 1
    VARIABLE  desplazar e ir al estado 2
    DISPLAY   desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    WHILE     desplazar e ir al estado 5
    IF        desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7
    EQUMIN    desplazar e ir al estado 8
    EQUMAX    desplazar e ir al estado 9

    sentencia     ir al estado 149
    gramatica     ir al estado 13
    dec_variable  ir al estado 14
    asig          ir al estado 15
    display       ir al estado 16
    get           ir al estado 17
    for           ir al estado 18
    while         ir al estado 19
    if            ir al estado 20
    equmax        ir al estado 21
    equmin        ir al estado 22


estado 136

   23 expresion: expresion . OP_SUMA termino
   24          | expresion . OP_RESTA termino
   37 for: FOR VARIABLE OP_ASIG expresion TO expresion . CORCHETE_A step CORCHETE_C $@1 NEXT VARIABLE

    OP_RESTA    desplazar e ir al estado 50
    CORCHETE_A  desplazar e ir al estado 150
    OP_SUMA     desplazar e ir al estado 51


estado 137

   77 expr_list: VARIABLE .

    $default  reduce usando la regla 77 (expr_list)


estado 138

   76 expr_list: CONST_STRING .

    $default  reduce usando la regla 76 (expr_list)


estado 139

   74 expr_list: CONST_INT .

    $default  reduce usando la regla 74 (expr_list)


estado 140

   75 expr_list: CONST_REAL .

    $default  reduce usando la regla 75 (expr_list)


estado 141

   71 equmin: EQUMIN PARENTESIS_A expresion PUNTO_COMA CORCHETE_A lista . CORCHETE_C PARENTESIS_C
   73 lista: lista . COMA expr_list

    COMA        desplazar e ir al estado 151
    CORCHETE_C  desplazar e ir al estado 152


estado 142

   72 lista: expr_list .

    $default  reduce usando la regla 72 (lista)


estado 143

   70 equmax: EQUMAX PARENTESIS_A expresion PUNTO_COMA CORCHETE_A lista . CORCHETE_C PARENTESIS_C
   73 lista: lista . COMA expr_list

    COMA        desplazar e ir al estado 151
    CORCHETE_C  desplazar e ir al estado 153


estado 144

   17 tipo: TYPE_INTEGER .

    $default  reduce usando la regla 17 (tipo)


estado 145

   18 tipo: TYPE_FLOAT .

    $default  reduce usando la regla 18 (tipo)


estado 146

   19 tipo: TYPE_STRING .

    $default  reduce usando la regla 19 (tipo)


estado 147

   15 lista_asig: VARIABLE COMA lista_asig COMA tipo .

    $default  reduce usando la regla 15 (lista_asig)


estado 148

   16 lista_asig: VARIABLE CORCHETE_A AS CORCHETE_A tipo .

    $default  reduce usando la regla 16 (lista_asig)


estado 149

    3 sentencia: sentencia . gramatica PUNTO_COMA
   46 if: IF cond_final sentencia $@3 ELSE $@4 sentencia . $@5 ENDIF

    DIM       desplazar e ir al estado 1
    VARIABLE  desplazar e ir al estado 2
    DISPLAY   desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    WHILE     desplazar e ir al estado 5
    IF        desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7
    EQUMIN    desplazar e ir al estado 8
    EQUMAX    desplazar e ir al estado 9

    $default  reduce usando la regla 45 ($@5)

    gramatica     ir al estado 42
    dec_variable  ir al estado 14
    asig          ir al estado 15
    display       ir al estado 16
    get           ir al estado 17
    for           ir al estado 18
    while         ir al estado 19
    if            ir al estado 20
    $@5           ir al estado 154
    equmax        ir al estado 21
    equmin        ir al estado 22


estado 150

   37 for: FOR VARIABLE OP_ASIG expresion TO expresion CORCHETE_A . step CORCHETE_C $@1 NEXT VARIABLE

    CONST_INT  desplazar e ir al estado 155

    $default  reduce usando la regla 39 (step)

    step  ir al estado 156


estado 151

   73 lista: lista COMA . expr_list

    VARIABLE      desplazar e ir al estado 137
    CONST_STRING  desplazar e ir al estado 138
    CONST_INT     desplazar e ir al estado 139
    CONST_REAL    desplazar e ir al estado 140

    expr_list  ir al estado 157


estado 152

   71 equmin: EQUMIN PARENTESIS_A expresion PUNTO_COMA CORCHETE_A lista CORCHETE_C . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 158


estado 153

   70 equmax: EQUMAX PARENTESIS_A expresion PUNTO_COMA CORCHETE_A lista CORCHETE_C . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 159


estado 154

   46 if: IF cond_final sentencia $@3 ELSE $@4 sentencia $@5 . ENDIF

    ENDIF  desplazar e ir al estado 160


estado 155

   38 step: CONST_INT .

    $default  reduce usando la regla 38 (step)


estado 156

   37 for: FOR VARIABLE OP_ASIG expresion TO expresion CORCHETE_A step . CORCHETE_C $@1 NEXT VARIABLE

    CORCHETE_C  desplazar e ir al estado 161


estado 157

   73 lista: lista COMA expr_list .

    $default  reduce usando la regla 73 (lista)


estado 158

   71 equmin: EQUMIN PARENTESIS_A expresion PUNTO_COMA CORCHETE_A lista CORCHETE_C PARENTESIS_C .

    $default  reduce usando la regla 71 (equmin)


estado 159

   70 equmax: EQUMAX PARENTESIS_A expresion PUNTO_COMA CORCHETE_A lista CORCHETE_C PARENTESIS_C .

    $default  reduce usando la regla 70 (equmax)


estado 160

   46 if: IF cond_final sentencia $@3 ELSE $@4 sentencia $@5 ENDIF .

    $default  reduce usando la regla 46 (if)


estado 161

   37 for: FOR VARIABLE OP_ASIG expresion TO expresion CORCHETE_A step CORCHETE_C . $@1 NEXT VARIABLE

    $default  reduce usando la regla 36 ($@1)

    $@1  ir al estado 162


estado 162

   37 for: FOR VARIABLE OP_ASIG expresion TO expresion CORCHETE_A step CORCHETE_C $@1 . NEXT VARIABLE

    NEXT  desplazar e ir al estado 163


estado 163

   37 for: FOR VARIABLE OP_ASIG expresion TO expresion CORCHETE_A step CORCHETE_C $@1 NEXT . VARIABLE

    VARIABLE  desplazar e ir al estado 164


estado 164

   37 for: FOR VARIABLE OP_ASIG expresion TO expresion CORCHETE_A step CORCHETE_C $@1 NEXT VARIABLE .

    $default  reduce usando la regla 37 (for)
