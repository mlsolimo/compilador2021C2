Terminals unused in grammar

   COMENTARIO_A
   COMENTARIO_C
   COMENTARIO
   .


Rules useless in parser due to conflicts

   41 $@7: /* vacío */


Estado 23 conflictos: 7 reducción(ones)/reducción(ones)


Gramática

    0 $accept: programa $end

    1 programa: prog

    2 prog: sentencia

    3 sentencia: sentencia grammar PUNTO_COMA
    4          | grammar PUNTO_COMA

    5 grammar: dec_var
    6        | asig
    7        | display
    8        | get
    9        | if
   10        | while
   11        | for

   12 asig: VARIABLE OP_ASIG expr
   13     | VARIABLE OP_ASIG CONST_STRING_R

   14 CONST_STRING_R: CONST_STRING

   15 NUMERO: CONST_INT
   16       | CONST_REAL

   17 expr: expr OP_SUMA termino
   18     | expr OP_RESTA termino
   19     | termino

   20 termino: termino OP_MULT factor
   21        | termino OP_DIV factor
   22        | '-' termino
   23        | factor

   24 factor: PARENTESIS_A expr PARENTESIS_C
   25       | NUMERO
   26       | VARIABLE

   27 display: DISPLAY CONST_STRING_R
   28        | DISPLAY expr

   29 get: GET VARIABLE

   30 $@1: /* vacío */

   31 $@2: /* vacío */

   32 while: WHILE $@1 cond_completa $@2 while_exp ENDWHILE

   33 while_exp: sentencia

   34 $@3: /* vacío */

   35 for: FOR VARIABLE OP_ASIG expr TO expr CORCHETE_A CONST_INT CORCHETE_C $@3 sentencia NEXT VARIABLE

   36 $@4: /* vacío */

   37 for: FOR VARIABLE OP_ASIG expr TO expr $@4 sentencia NEXT VARIABLE

   38 $@5: /* vacío */

   39 $@6: /* vacío */

   40 if: IF cond_completa $@5 sentencia $@6 ENDIF

   41 $@7: /* vacío */

   42 $@8: /* vacío */

   43 $@9: /* vacío */

   44 $@10: /* vacío */

   45 if: IF cond_completa $@7 sentencia $@8 ELSE $@9 sentencia $@10 ENDIF

   46 $@11: /* vacío */

   47 $@12: /* vacío */

   48 if: IF cond_completa $@11 ELSE $@12 ENDIF

   49 $@13: /* vacío */

   50 if: IF cond_completa $@13 ENDIF

   51 cond_completa: /* vacío */
   52              | PARENTESIS_A cond PARENTESIS_C
   53              | PARENTESIS_A cond_completa OP_OR cond PARENTESIS_C
   54              | PARENTESIS_A cond_completa OP_AND cond PARENTESIS_C
   55              | OP_NOT cond_completa
   56              | PARENTESIS_A cond OP_OR cond_completa PARENTESIS_C
   57              | PARENTESIS_A cond OP_AND cond_completa PARENTESIS_C
   58              | PARENTESIS_A cond OP_AND cond PARENTESIS_C
   59              | PARENTESIS_A cond OP_OR cond PARENTESIS_C
   60              | PARENTESIS_A equmin PARENTESIS_C
   61              | PARENTESIS_A equmax PARENTESIS_C

   62 $@14: /* vacío */

   63 equmax: EQU_MAX PARENTESIS_A cond_equ $@14 PARENTESIS_C

   64 $@15: /* vacío */

   65 equmin: EQU_MIN PARENTESIS_A cond_equ $@15 PARENTESIS_C

   66 $@16: /* vacío */

   67 cond_equ: expr $@16 PUNTO_COMA CORCHETE_A lista CORCHETE_C

   68 lista: expr_list
   69      | lista COMA expr_list

   70 expr_list: CONST_INT
   71          | CONST_REAL
   72          | CONST_STRING
   73          | VARIABLE

   74 cond: expr OP_COMP termino
   75     | expr OP_MAY_IGU termino
   76     | expr OP_MEN_IGU termino
   77     | expr OP_MENOR termino
   78     | expr OP_MAYOR termino
   79     | expr OP_AND termino
   80     | expr OP_OR termino
   81     | expr OP_NOT termino
   82     | OP_NOT VARIABLE

   83 dec_var: DIM CORCHETE_A seg_asig CORCHETE_C

   84 seg_asig: VARIABLE COMA seg_asig COMA tipo
   85         | VARIABLE CORCHETE_C AS CORCHETE_A tipo

   86 tipo: INT
   87     | REAL
   88     | STRING


Terminales con las reglas donde aparecen

$end (0) 0
'-' (45) 22
error (256)
DIM (258) 83
WHILE (259) 32
ENDWHILE (260) 32
IF (261) 40 45 48 50
ELSE (262) 45 48
ENDIF (263) 40 45 48 50
INT (264) 86
REAL (265) 87
STRING (266) 88
GET (267) 29
DISPLAY (268) 27 28
AS (269) 85
CORCHETE_A (270) 35 67 83 85
CORCHETE_C (271) 35 67 83 85
COMA (272) 69 84
PUNTO_COMA (273) 3 4 67
PARENTESIS_A (274) 24 52 53 54 56 57 58 59 60 61 63 65
PARENTESIS_C (275) 24 52 53 54 56 57 58 59 60 61 63 65
OP_MENOR (276) 77
OP_MAYOR (277) 78
OP_MEN_IGU (278) 76
OP_MAY_IGU (279) 75
OP_NOT (280) 55 81 82
OP_AND (281) 54 57 58 79
OP_OR (282) 53 56 59 80
OP_COMP (283) 74
EQU_MAX (284) 63
EQU_MIN (285) 65
CONST_INT (286) 15 35 70
CONST_REAL (287) 16 71
VARIABLE (288) 12 13 26 29 35 37 73 82 84 85
CONST_STRING (289) 14 72
COMENTARIO_A (290)
COMENTARIO_C (291)
COMENTARIO (292)
FOR (293) 35 37
NEXT (294) 35 37
TO (295) 35 37
. (296)
OP_SUMA (297) 17
OP_RESTA (298) 18
OP_DIV (299) 21
OP_MULT (300) 20
MENOS_UNARIO (301)
OP_ASIG (302) 12 13 35 37


No terminales con las reglas donde aparecen

$accept (49)
    en la izquierda: 0
programa (50)
    en la izquierda: 1, en la derecha: 0
prog (51)
    en la izquierda: 2, en la derecha: 1
sentencia (52)
    en la izquierda: 3 4, en la derecha: 2 3 33 35 37 40 45
grammar (53)
    en la izquierda: 5 6 7 8 9 10 11, en la derecha: 3 4
asig (54)
    en la izquierda: 12 13, en la derecha: 6
CONST_STRING_R (55)
    en la izquierda: 14, en la derecha: 13 27
NUMERO (56)
    en la izquierda: 15 16, en la derecha: 25
expr (57)
    en la izquierda: 17 18 19, en la derecha: 12 17 18 24 28 35 37
    67 74 75 76 77 78 79 80 81
termino (58)
    en la izquierda: 20 21 22 23, en la derecha: 17 18 19 20 21 22
    74 75 76 77 78 79 80 81
factor (59)
    en la izquierda: 24 25 26, en la derecha: 20 21 23
display (60)
    en la izquierda: 27 28, en la derecha: 7
get (61)
    en la izquierda: 29, en la derecha: 8
while (62)
    en la izquierda: 32, en la derecha: 10
$@1 (63)
    en la izquierda: 30, en la derecha: 32
$@2 (64)
    en la izquierda: 31, en la derecha: 32
while_exp (65)
    en la izquierda: 33, en la derecha: 32
for (66)
    en la izquierda: 35 37, en la derecha: 11
$@3 (67)
    en la izquierda: 34, en la derecha: 35
$@4 (68)
    en la izquierda: 36, en la derecha: 37
if (69)
    en la izquierda: 40 45 48 50, en la derecha: 9
$@5 (70)
    en la izquierda: 38, en la derecha: 40
$@6 (71)
    en la izquierda: 39, en la derecha: 40
$@7 (72)
    en la izquierda: 41, en la derecha: 45
$@8 (73)
    en la izquierda: 42, en la derecha: 45
$@9 (74)
    en la izquierda: 43, en la derecha: 45
$@10 (75)
    en la izquierda: 44, en la derecha: 45
$@11 (76)
    en la izquierda: 46, en la derecha: 48
$@12 (77)
    en la izquierda: 47, en la derecha: 48
$@13 (78)
    en la izquierda: 49, en la derecha: 50
cond_completa (79)
    en la izquierda: 51 52 53 54 55 56 57 58 59 60 61, en la derecha:
    32 40 45 48 50 53 54 55 56 57
equmax (80)
    en la izquierda: 63, en la derecha: 61
$@14 (81)
    en la izquierda: 62, en la derecha: 63
equmin (82)
    en la izquierda: 65, en la derecha: 60
$@15 (83)
    en la izquierda: 64, en la derecha: 65
cond_equ (84)
    en la izquierda: 67, en la derecha: 63 65
$@16 (85)
    en la izquierda: 66, en la derecha: 67
lista (86)
    en la izquierda: 68 69, en la derecha: 67 69
expr_list (87)
    en la izquierda: 70 71 72 73, en la derecha: 68 69
cond (88)
    en la izquierda: 74 75 76 77 78 79 80 81 82, en la derecha: 52
    53 54 56 57 58 59
dec_var (89)
    en la izquierda: 83, en la derecha: 5
seg_asig (90)
    en la izquierda: 84 85, en la derecha: 83 84
tipo (91)
    en la izquierda: 86 87 88, en la derecha: 84 85


estado 0

    0 $accept: . programa $end

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    programa   ir al estado 8
    prog       ir al estado 9
    sentencia  ir al estado 10
    grammar    ir al estado 11
    asig       ir al estado 12
    display    ir al estado 13
    get        ir al estado 14
    while      ir al estado 15
    for        ir al estado 16
    if         ir al estado 17
    dec_var    ir al estado 18


estado 1

   83 dec_var: DIM . CORCHETE_A seg_asig CORCHETE_C

    CORCHETE_A  desplazar e ir al estado 19


estado 2

   32 while: WHILE . $@1 cond_completa $@2 while_exp ENDWHILE

    $default  reduce usando la regla 30 ($@1)

    $@1  ir al estado 20


estado 3

   40 if: IF . cond_completa $@5 sentencia $@6 ENDIF
   45   | IF . cond_completa $@7 sentencia $@8 ELSE $@9 sentencia $@10 ENDIF
   48   | IF . cond_completa $@11 ELSE $@12 ENDIF
   50   | IF . cond_completa $@13 ENDIF

    PARENTESIS_A  desplazar e ir al estado 21
    OP_NOT        desplazar e ir al estado 22

    $default  reduce usando la regla 51 (cond_completa)

    cond_completa  ir al estado 23


estado 4

   29 get: GET . VARIABLE

    VARIABLE  desplazar e ir al estado 24


estado 5

   27 display: DISPLAY . CONST_STRING_R
   28        | DISPLAY . expr

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    CONST_STRING  desplazar e ir al estado 29
    '-'           desplazar e ir al estado 30

    CONST_STRING_R  ir al estado 31
    NUMERO          ir al estado 32
    expr            ir al estado 33
    termino         ir al estado 34
    factor          ir al estado 35


estado 6

   12 asig: VARIABLE . OP_ASIG expr
   13     | VARIABLE . OP_ASIG CONST_STRING_R

    OP_ASIG  desplazar e ir al estado 36


estado 7

   35 for: FOR . VARIABLE OP_ASIG expr TO expr CORCHETE_A CONST_INT CORCHETE_C $@3 sentencia NEXT VARIABLE
   37    | FOR . VARIABLE OP_ASIG expr TO expr $@4 sentencia NEXT VARIABLE

    VARIABLE  desplazar e ir al estado 37


estado 8

    0 $accept: programa . $end

    $end  desplazar e ir al estado 38


estado 9

    1 programa: prog .

    $default  reduce usando la regla 1 (programa)


estado 10

    2 prog: sentencia .
    3 sentencia: sentencia . grammar PUNTO_COMA

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    $default  reduce usando la regla 2 (prog)

    grammar  ir al estado 39
    asig     ir al estado 12
    display  ir al estado 13
    get      ir al estado 14
    while    ir al estado 15
    for      ir al estado 16
    if       ir al estado 17
    dec_var  ir al estado 18


estado 11

    4 sentencia: grammar . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 40


estado 12

    6 grammar: asig .

    $default  reduce usando la regla 6 (grammar)


estado 13

    7 grammar: display .

    $default  reduce usando la regla 7 (grammar)


estado 14

    8 grammar: get .

    $default  reduce usando la regla 8 (grammar)


estado 15

   10 grammar: while .

    $default  reduce usando la regla 10 (grammar)


estado 16

   11 grammar: for .

    $default  reduce usando la regla 11 (grammar)


estado 17

    9 grammar: if .

    $default  reduce usando la regla 9 (grammar)


estado 18

    5 grammar: dec_var .

    $default  reduce usando la regla 5 (grammar)


estado 19

   83 dec_var: DIM CORCHETE_A . seg_asig CORCHETE_C

    VARIABLE  desplazar e ir al estado 41

    seg_asig  ir al estado 42


estado 20

   32 while: WHILE $@1 . cond_completa $@2 while_exp ENDWHILE

    PARENTESIS_A  desplazar e ir al estado 21
    OP_NOT        desplazar e ir al estado 22

    $default  reduce usando la regla 51 (cond_completa)

    cond_completa  ir al estado 43


estado 21

   52 cond_completa: PARENTESIS_A . cond PARENTESIS_C
   53              | PARENTESIS_A . cond_completa OP_OR cond PARENTESIS_C
   54              | PARENTESIS_A . cond_completa OP_AND cond PARENTESIS_C
   56              | PARENTESIS_A . cond OP_OR cond_completa PARENTESIS_C
   57              | PARENTESIS_A . cond OP_AND cond_completa PARENTESIS_C
   58              | PARENTESIS_A . cond OP_AND cond PARENTESIS_C
   59              | PARENTESIS_A . cond OP_OR cond PARENTESIS_C
   60              | PARENTESIS_A . equmin PARENTESIS_C
   61              | PARENTESIS_A . equmax PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 44
    OP_NOT        desplazar e ir al estado 45
    EQU_MAX       desplazar e ir al estado 46
    EQU_MIN       desplazar e ir al estado 47
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    $default  reduce usando la regla 51 (cond_completa)

    NUMERO         ir al estado 32
    expr           ir al estado 48
    termino        ir al estado 34
    factor         ir al estado 35
    cond_completa  ir al estado 49
    equmax         ir al estado 50
    equmin         ir al estado 51
    cond           ir al estado 52


estado 22

   55 cond_completa: OP_NOT . cond_completa

    PARENTESIS_A  desplazar e ir al estado 21
    OP_NOT        desplazar e ir al estado 22

    $default  reduce usando la regla 51 (cond_completa)

    cond_completa  ir al estado 53


estado 23

   40 if: IF cond_completa . $@5 sentencia $@6 ENDIF
   45   | IF cond_completa . $@7 sentencia $@8 ELSE $@9 sentencia $@10 ENDIF
   48   | IF cond_completa . $@11 ELSE $@12 ENDIF
   50   | IF cond_completa . $@13 ENDIF

    DIM       reduce usando la regla 38 ($@5)
    DIM       [reduce usando la regla 41 ($@7)]
    WHILE     reduce usando la regla 38 ($@5)
    WHILE     [reduce usando la regla 41 ($@7)]
    IF        reduce usando la regla 38 ($@5)
    IF        [reduce usando la regla 41 ($@7)]
    ELSE      reduce usando la regla 46 ($@11)
    ENDIF     reduce usando la regla 49 ($@13)
    GET       reduce usando la regla 38 ($@5)
    GET       [reduce usando la regla 41 ($@7)]
    DISPLAY   reduce usando la regla 38 ($@5)
    DISPLAY   [reduce usando la regla 41 ($@7)]
    VARIABLE  reduce usando la regla 38 ($@5)
    VARIABLE  [reduce usando la regla 41 ($@7)]
    FOR       reduce usando la regla 38 ($@5)
    FOR       [reduce usando la regla 41 ($@7)]
    $default  reduce usando la regla 38 ($@5)

    $@5   ir al estado 54
    $@7   ir al estado 55
    $@11  ir al estado 56
    $@13  ir al estado 57


estado 24

   29 get: GET VARIABLE .

    $default  reduce usando la regla 29 (get)


estado 25

   24 factor: PARENTESIS_A . expr PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    expr     ir al estado 58
    termino  ir al estado 34
    factor   ir al estado 35


estado 26

   15 NUMERO: CONST_INT .

    $default  reduce usando la regla 15 (NUMERO)


estado 27

   16 NUMERO: CONST_REAL .

    $default  reduce usando la regla 16 (NUMERO)


estado 28

   26 factor: VARIABLE .

    $default  reduce usando la regla 26 (factor)


estado 29

   14 CONST_STRING_R: CONST_STRING .

    $default  reduce usando la regla 14 (CONST_STRING_R)


estado 30

   22 termino: '-' . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 59
    factor   ir al estado 35


estado 31

   27 display: DISPLAY CONST_STRING_R .

    $default  reduce usando la regla 27 (display)


estado 32

   25 factor: NUMERO .

    $default  reduce usando la regla 25 (factor)


estado 33

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   28 display: DISPLAY expr .

    OP_SUMA   desplazar e ir al estado 60
    OP_RESTA  desplazar e ir al estado 61

    $default  reduce usando la regla 28 (display)


estado 34

   19 expr: termino .
   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 19 (expr)


estado 35

   23 termino: factor .

    $default  reduce usando la regla 23 (termino)


estado 36

   12 asig: VARIABLE OP_ASIG . expr
   13     | VARIABLE OP_ASIG . CONST_STRING_R

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    CONST_STRING  desplazar e ir al estado 29
    '-'           desplazar e ir al estado 30

    CONST_STRING_R  ir al estado 64
    NUMERO          ir al estado 32
    expr            ir al estado 65
    termino         ir al estado 34
    factor          ir al estado 35


estado 37

   35 for: FOR VARIABLE . OP_ASIG expr TO expr CORCHETE_A CONST_INT CORCHETE_C $@3 sentencia NEXT VARIABLE
   37    | FOR VARIABLE . OP_ASIG expr TO expr $@4 sentencia NEXT VARIABLE

    OP_ASIG  desplazar e ir al estado 66


estado 38

    0 $accept: programa $end .

    $default  aceptar


estado 39

    3 sentencia: sentencia grammar . PUNTO_COMA

    PUNTO_COMA  desplazar e ir al estado 67


estado 40

    4 sentencia: grammar PUNTO_COMA .

    $default  reduce usando la regla 4 (sentencia)


estado 41

   84 seg_asig: VARIABLE . COMA seg_asig COMA tipo
   85         | VARIABLE . CORCHETE_C AS CORCHETE_A tipo

    CORCHETE_C  desplazar e ir al estado 68
    COMA        desplazar e ir al estado 69


estado 42

   83 dec_var: DIM CORCHETE_A seg_asig . CORCHETE_C

    CORCHETE_C  desplazar e ir al estado 70


estado 43

   32 while: WHILE $@1 cond_completa . $@2 while_exp ENDWHILE

    $default  reduce usando la regla 31 ($@2)

    $@2  ir al estado 71


estado 44

   24 factor: PARENTESIS_A . expr PARENTESIS_C
   52 cond_completa: PARENTESIS_A . cond PARENTESIS_C
   53              | PARENTESIS_A . cond_completa OP_OR cond PARENTESIS_C
   54              | PARENTESIS_A . cond_completa OP_AND cond PARENTESIS_C
   56              | PARENTESIS_A . cond OP_OR cond_completa PARENTESIS_C
   57              | PARENTESIS_A . cond OP_AND cond_completa PARENTESIS_C
   58              | PARENTESIS_A . cond OP_AND cond PARENTESIS_C
   59              | PARENTESIS_A . cond OP_OR cond PARENTESIS_C
   60              | PARENTESIS_A . equmin PARENTESIS_C
   61              | PARENTESIS_A . equmax PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 44
    OP_NOT        desplazar e ir al estado 45
    EQU_MAX       desplazar e ir al estado 46
    EQU_MIN       desplazar e ir al estado 47
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    $default  reduce usando la regla 51 (cond_completa)

    NUMERO         ir al estado 32
    expr           ir al estado 72
    termino        ir al estado 34
    factor         ir al estado 35
    cond_completa  ir al estado 49
    equmax         ir al estado 50
    equmin         ir al estado 51
    cond           ir al estado 52


estado 45

   55 cond_completa: OP_NOT . cond_completa
   82 cond: OP_NOT . VARIABLE

    PARENTESIS_A  desplazar e ir al estado 21
    OP_NOT        desplazar e ir al estado 22
    VARIABLE      desplazar e ir al estado 73

    $default  reduce usando la regla 51 (cond_completa)

    cond_completa  ir al estado 53


estado 46

   63 equmax: EQU_MAX . PARENTESIS_A cond_equ $@14 PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 74


estado 47

   65 equmin: EQU_MIN . PARENTESIS_A cond_equ $@15 PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 75


estado 48

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   74 cond: expr . OP_COMP termino
   75     | expr . OP_MAY_IGU termino
   76     | expr . OP_MEN_IGU termino
   77     | expr . OP_MENOR termino
   78     | expr . OP_MAYOR termino
   79     | expr . OP_AND termino
   80     | expr . OP_OR termino
   81     | expr . OP_NOT termino

    OP_MENOR    desplazar e ir al estado 76
    OP_MAYOR    desplazar e ir al estado 77
    OP_MEN_IGU  desplazar e ir al estado 78
    OP_MAY_IGU  desplazar e ir al estado 79
    OP_NOT      desplazar e ir al estado 80
    OP_AND      desplazar e ir al estado 81
    OP_OR       desplazar e ir al estado 82
    OP_COMP     desplazar e ir al estado 83
    OP_SUMA     desplazar e ir al estado 60
    OP_RESTA    desplazar e ir al estado 61


estado 49

   53 cond_completa: PARENTESIS_A cond_completa . OP_OR cond PARENTESIS_C
   54              | PARENTESIS_A cond_completa . OP_AND cond PARENTESIS_C

    OP_AND  desplazar e ir al estado 84
    OP_OR   desplazar e ir al estado 85


estado 50

   61 cond_completa: PARENTESIS_A equmax . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 86


estado 51

   60 cond_completa: PARENTESIS_A equmin . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 87


estado 52

   52 cond_completa: PARENTESIS_A cond . PARENTESIS_C
   56              | PARENTESIS_A cond . OP_OR cond_completa PARENTESIS_C
   57              | PARENTESIS_A cond . OP_AND cond_completa PARENTESIS_C
   58              | PARENTESIS_A cond . OP_AND cond PARENTESIS_C
   59              | PARENTESIS_A cond . OP_OR cond PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 88
    OP_AND        desplazar e ir al estado 89
    OP_OR         desplazar e ir al estado 90


estado 53

   55 cond_completa: OP_NOT cond_completa .

    $default  reduce usando la regla 55 (cond_completa)


estado 54

   40 if: IF cond_completa $@5 . sentencia $@6 ENDIF

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    sentencia  ir al estado 91
    grammar    ir al estado 11
    asig       ir al estado 12
    display    ir al estado 13
    get        ir al estado 14
    while      ir al estado 15
    for        ir al estado 16
    if         ir al estado 17
    dec_var    ir al estado 18


estado 55

   45 if: IF cond_completa $@7 . sentencia $@8 ELSE $@9 sentencia $@10 ENDIF

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    sentencia  ir al estado 92
    grammar    ir al estado 11
    asig       ir al estado 12
    display    ir al estado 13
    get        ir al estado 14
    while      ir al estado 15
    for        ir al estado 16
    if         ir al estado 17
    dec_var    ir al estado 18


estado 56

   48 if: IF cond_completa $@11 . ELSE $@12 ENDIF

    ELSE  desplazar e ir al estado 93


estado 57

   50 if: IF cond_completa $@13 . ENDIF

    ENDIF  desplazar e ir al estado 94


estado 58

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   24 factor: PARENTESIS_A expr . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 95
    OP_SUMA       desplazar e ir al estado 60
    OP_RESTA      desplazar e ir al estado 61


estado 59

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   22        | '-' termino .

    $default  reduce usando la regla 22 (termino)


estado 60

   17 expr: expr OP_SUMA . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 96
    factor   ir al estado 35


estado 61

   18 expr: expr OP_RESTA . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 97
    factor   ir al estado 35


estado 62

   21 termino: termino OP_DIV . factor

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28

    NUMERO  ir al estado 32
    factor  ir al estado 98


estado 63

   20 termino: termino OP_MULT . factor

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28

    NUMERO  ir al estado 32
    factor  ir al estado 99


estado 64

   13 asig: VARIABLE OP_ASIG CONST_STRING_R .

    $default  reduce usando la regla 13 (asig)


estado 65

   12 asig: VARIABLE OP_ASIG expr .
   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 60
    OP_RESTA  desplazar e ir al estado 61

    $default  reduce usando la regla 12 (asig)


estado 66

   35 for: FOR VARIABLE OP_ASIG . expr TO expr CORCHETE_A CONST_INT CORCHETE_C $@3 sentencia NEXT VARIABLE
   37    | FOR VARIABLE OP_ASIG . expr TO expr $@4 sentencia NEXT VARIABLE

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    expr     ir al estado 100
    termino  ir al estado 34
    factor   ir al estado 35


estado 67

    3 sentencia: sentencia grammar PUNTO_COMA .

    $default  reduce usando la regla 3 (sentencia)


estado 68

   85 seg_asig: VARIABLE CORCHETE_C . AS CORCHETE_A tipo

    AS  desplazar e ir al estado 101


estado 69

   84 seg_asig: VARIABLE COMA . seg_asig COMA tipo

    VARIABLE  desplazar e ir al estado 41

    seg_asig  ir al estado 102


estado 70

   83 dec_var: DIM CORCHETE_A seg_asig CORCHETE_C .

    $default  reduce usando la regla 83 (dec_var)


estado 71

   32 while: WHILE $@1 cond_completa $@2 . while_exp ENDWHILE

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    sentencia  ir al estado 103
    grammar    ir al estado 11
    asig       ir al estado 12
    display    ir al estado 13
    get        ir al estado 14
    while      ir al estado 15
    while_exp  ir al estado 104
    for        ir al estado 16
    if         ir al estado 17
    dec_var    ir al estado 18


estado 72

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   24 factor: PARENTESIS_A expr . PARENTESIS_C
   74 cond: expr . OP_COMP termino
   75     | expr . OP_MAY_IGU termino
   76     | expr . OP_MEN_IGU termino
   77     | expr . OP_MENOR termino
   78     | expr . OP_MAYOR termino
   79     | expr . OP_AND termino
   80     | expr . OP_OR termino
   81     | expr . OP_NOT termino

    PARENTESIS_C  desplazar e ir al estado 95
    OP_MENOR      desplazar e ir al estado 76
    OP_MAYOR      desplazar e ir al estado 77
    OP_MEN_IGU    desplazar e ir al estado 78
    OP_MAY_IGU    desplazar e ir al estado 79
    OP_NOT        desplazar e ir al estado 80
    OP_AND        desplazar e ir al estado 81
    OP_OR         desplazar e ir al estado 82
    OP_COMP       desplazar e ir al estado 83
    OP_SUMA       desplazar e ir al estado 60
    OP_RESTA      desplazar e ir al estado 61


estado 73

   82 cond: OP_NOT VARIABLE .

    $default  reduce usando la regla 82 (cond)


estado 74

   63 equmax: EQU_MAX PARENTESIS_A . cond_equ $@14 PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO    ir al estado 32
    expr      ir al estado 105
    termino   ir al estado 34
    factor    ir al estado 35
    cond_equ  ir al estado 106


estado 75

   65 equmin: EQU_MIN PARENTESIS_A . cond_equ $@15 PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO    ir al estado 32
    expr      ir al estado 105
    termino   ir al estado 34
    factor    ir al estado 35
    cond_equ  ir al estado 107


estado 76

   77 cond: expr OP_MENOR . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 108
    factor   ir al estado 35


estado 77

   78 cond: expr OP_MAYOR . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 109
    factor   ir al estado 35


estado 78

   76 cond: expr OP_MEN_IGU . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 110
    factor   ir al estado 35


estado 79

   75 cond: expr OP_MAY_IGU . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 111
    factor   ir al estado 35


estado 80

   81 cond: expr OP_NOT . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 112
    factor   ir al estado 35


estado 81

   79 cond: expr OP_AND . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 113
    factor   ir al estado 35


estado 82

   80 cond: expr OP_OR . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 114
    factor   ir al estado 35


estado 83

   74 cond: expr OP_COMP . termino

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    termino  ir al estado 115
    factor   ir al estado 35


estado 84

   54 cond_completa: PARENTESIS_A cond_completa OP_AND . cond PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 25
    OP_NOT        desplazar e ir al estado 116
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    expr     ir al estado 48
    termino  ir al estado 34
    factor   ir al estado 35
    cond     ir al estado 117


estado 85

   53 cond_completa: PARENTESIS_A cond_completa OP_OR . cond PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 25
    OP_NOT        desplazar e ir al estado 116
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    expr     ir al estado 48
    termino  ir al estado 34
    factor   ir al estado 35
    cond     ir al estado 118


estado 86

   61 cond_completa: PARENTESIS_A equmax PARENTESIS_C .

    $default  reduce usando la regla 61 (cond_completa)


estado 87

   60 cond_completa: PARENTESIS_A equmin PARENTESIS_C .

    $default  reduce usando la regla 60 (cond_completa)


estado 88

   52 cond_completa: PARENTESIS_A cond PARENTESIS_C .

    $default  reduce usando la regla 52 (cond_completa)


estado 89

   57 cond_completa: PARENTESIS_A cond OP_AND . cond_completa PARENTESIS_C
   58              | PARENTESIS_A cond OP_AND . cond PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 44
    OP_NOT        desplazar e ir al estado 45
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    $default  reduce usando la regla 51 (cond_completa)

    NUMERO         ir al estado 32
    expr           ir al estado 48
    termino        ir al estado 34
    factor         ir al estado 35
    cond_completa  ir al estado 119
    cond           ir al estado 120


estado 90

   56 cond_completa: PARENTESIS_A cond OP_OR . cond_completa PARENTESIS_C
   59              | PARENTESIS_A cond OP_OR . cond PARENTESIS_C

    PARENTESIS_A  desplazar e ir al estado 44
    OP_NOT        desplazar e ir al estado 45
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    $default  reduce usando la regla 51 (cond_completa)

    NUMERO         ir al estado 32
    expr           ir al estado 48
    termino        ir al estado 34
    factor         ir al estado 35
    cond_completa  ir al estado 121
    cond           ir al estado 122


estado 91

    3 sentencia: sentencia . grammar PUNTO_COMA
   40 if: IF cond_completa $@5 sentencia . $@6 ENDIF

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    $default  reduce usando la regla 39 ($@6)

    grammar  ir al estado 39
    asig     ir al estado 12
    display  ir al estado 13
    get      ir al estado 14
    while    ir al estado 15
    for      ir al estado 16
    if       ir al estado 17
    $@6      ir al estado 123
    dec_var  ir al estado 18


estado 92

    3 sentencia: sentencia . grammar PUNTO_COMA
   45 if: IF cond_completa $@7 sentencia . $@8 ELSE $@9 sentencia $@10 ENDIF

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    $default  reduce usando la regla 42 ($@8)

    grammar  ir al estado 39
    asig     ir al estado 12
    display  ir al estado 13
    get      ir al estado 14
    while    ir al estado 15
    for      ir al estado 16
    if       ir al estado 17
    $@8      ir al estado 124
    dec_var  ir al estado 18


estado 93

   48 if: IF cond_completa $@11 ELSE . $@12 ENDIF

    $default  reduce usando la regla 47 ($@12)

    $@12  ir al estado 125


estado 94

   50 if: IF cond_completa $@13 ENDIF .

    $default  reduce usando la regla 50 (if)


estado 95

   24 factor: PARENTESIS_A expr PARENTESIS_C .

    $default  reduce usando la regla 24 (factor)


estado 96

   17 expr: expr OP_SUMA termino .
   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 17 (expr)


estado 97

   18 expr: expr OP_RESTA termino .
   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 18 (expr)


estado 98

   21 termino: termino OP_DIV factor .

    $default  reduce usando la regla 21 (termino)


estado 99

   20 termino: termino OP_MULT factor .

    $default  reduce usando la regla 20 (termino)


estado 100

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   35 for: FOR VARIABLE OP_ASIG expr . TO expr CORCHETE_A CONST_INT CORCHETE_C $@3 sentencia NEXT VARIABLE
   37    | FOR VARIABLE OP_ASIG expr . TO expr $@4 sentencia NEXT VARIABLE

    TO        desplazar e ir al estado 126
    OP_SUMA   desplazar e ir al estado 60
    OP_RESTA  desplazar e ir al estado 61


estado 101

   85 seg_asig: VARIABLE CORCHETE_C AS . CORCHETE_A tipo

    CORCHETE_A  desplazar e ir al estado 127


estado 102

   84 seg_asig: VARIABLE COMA seg_asig . COMA tipo

    COMA  desplazar e ir al estado 128


estado 103

    3 sentencia: sentencia . grammar PUNTO_COMA
   33 while_exp: sentencia .

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    $default  reduce usando la regla 33 (while_exp)

    grammar  ir al estado 39
    asig     ir al estado 12
    display  ir al estado 13
    get      ir al estado 14
    while    ir al estado 15
    for      ir al estado 16
    if       ir al estado 17
    dec_var  ir al estado 18


estado 104

   32 while: WHILE $@1 cond_completa $@2 while_exp . ENDWHILE

    ENDWHILE  desplazar e ir al estado 129


estado 105

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   67 cond_equ: expr . $@16 PUNTO_COMA CORCHETE_A lista CORCHETE_C

    OP_SUMA   desplazar e ir al estado 60
    OP_RESTA  desplazar e ir al estado 61

    $default  reduce usando la regla 66 ($@16)

    $@16  ir al estado 130


estado 106

   63 equmax: EQU_MAX PARENTESIS_A cond_equ . $@14 PARENTESIS_C

    $default  reduce usando la regla 62 ($@14)

    $@14  ir al estado 131


estado 107

   65 equmin: EQU_MIN PARENTESIS_A cond_equ . $@15 PARENTESIS_C

    $default  reduce usando la regla 64 ($@15)

    $@15  ir al estado 132


estado 108

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   77 cond: expr OP_MENOR termino .

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 77 (cond)


estado 109

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   78 cond: expr OP_MAYOR termino .

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 78 (cond)


estado 110

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   76 cond: expr OP_MEN_IGU termino .

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 76 (cond)


estado 111

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   75 cond: expr OP_MAY_IGU termino .

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 75 (cond)


estado 112

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   81 cond: expr OP_NOT termino .

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 81 (cond)


estado 113

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   79 cond: expr OP_AND termino .

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 79 (cond)


estado 114

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   80 cond: expr OP_OR termino .

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 80 (cond)


estado 115

   20 termino: termino . OP_MULT factor
   21        | termino . OP_DIV factor
   74 cond: expr OP_COMP termino .

    OP_DIV   desplazar e ir al estado 62
    OP_MULT  desplazar e ir al estado 63

    $default  reduce usando la regla 74 (cond)


estado 116

   82 cond: OP_NOT . VARIABLE

    VARIABLE  desplazar e ir al estado 73


estado 117

   54 cond_completa: PARENTESIS_A cond_completa OP_AND cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 133


estado 118

   53 cond_completa: PARENTESIS_A cond_completa OP_OR cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 134


estado 119

   57 cond_completa: PARENTESIS_A cond OP_AND cond_completa . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 135


estado 120

   58 cond_completa: PARENTESIS_A cond OP_AND cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 136


estado 121

   56 cond_completa: PARENTESIS_A cond OP_OR cond_completa . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 137


estado 122

   59 cond_completa: PARENTESIS_A cond OP_OR cond . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 138


estado 123

   40 if: IF cond_completa $@5 sentencia $@6 . ENDIF

    ENDIF  desplazar e ir al estado 139


estado 124

   45 if: IF cond_completa $@7 sentencia $@8 . ELSE $@9 sentencia $@10 ENDIF

    ELSE  desplazar e ir al estado 140


estado 125

   48 if: IF cond_completa $@11 ELSE $@12 . ENDIF

    ENDIF  desplazar e ir al estado 141


estado 126

   35 for: FOR VARIABLE OP_ASIG expr TO . expr CORCHETE_A CONST_INT CORCHETE_C $@3 sentencia NEXT VARIABLE
   37    | FOR VARIABLE OP_ASIG expr TO . expr $@4 sentencia NEXT VARIABLE

    PARENTESIS_A  desplazar e ir al estado 25
    CONST_INT     desplazar e ir al estado 26
    CONST_REAL    desplazar e ir al estado 27
    VARIABLE      desplazar e ir al estado 28
    '-'           desplazar e ir al estado 30

    NUMERO   ir al estado 32
    expr     ir al estado 142
    termino  ir al estado 34
    factor   ir al estado 35


estado 127

   85 seg_asig: VARIABLE CORCHETE_C AS CORCHETE_A . tipo

    INT     desplazar e ir al estado 143
    REAL    desplazar e ir al estado 144
    STRING  desplazar e ir al estado 145

    tipo  ir al estado 146


estado 128

   84 seg_asig: VARIABLE COMA seg_asig COMA . tipo

    INT     desplazar e ir al estado 143
    REAL    desplazar e ir al estado 144
    STRING  desplazar e ir al estado 145

    tipo  ir al estado 147


estado 129

   32 while: WHILE $@1 cond_completa $@2 while_exp ENDWHILE .

    $default  reduce usando la regla 32 (while)


estado 130

   67 cond_equ: expr $@16 . PUNTO_COMA CORCHETE_A lista CORCHETE_C

    PUNTO_COMA  desplazar e ir al estado 148


estado 131

   63 equmax: EQU_MAX PARENTESIS_A cond_equ $@14 . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 149


estado 132

   65 equmin: EQU_MIN PARENTESIS_A cond_equ $@15 . PARENTESIS_C

    PARENTESIS_C  desplazar e ir al estado 150


estado 133

   54 cond_completa: PARENTESIS_A cond_completa OP_AND cond PARENTESIS_C .

    $default  reduce usando la regla 54 (cond_completa)


estado 134

   53 cond_completa: PARENTESIS_A cond_completa OP_OR cond PARENTESIS_C .

    $default  reduce usando la regla 53 (cond_completa)


estado 135

   57 cond_completa: PARENTESIS_A cond OP_AND cond_completa PARENTESIS_C .

    $default  reduce usando la regla 57 (cond_completa)


estado 136

   58 cond_completa: PARENTESIS_A cond OP_AND cond PARENTESIS_C .

    $default  reduce usando la regla 58 (cond_completa)


estado 137

   56 cond_completa: PARENTESIS_A cond OP_OR cond_completa PARENTESIS_C .

    $default  reduce usando la regla 56 (cond_completa)


estado 138

   59 cond_completa: PARENTESIS_A cond OP_OR cond PARENTESIS_C .

    $default  reduce usando la regla 59 (cond_completa)


estado 139

   40 if: IF cond_completa $@5 sentencia $@6 ENDIF .

    $default  reduce usando la regla 40 (if)


estado 140

   45 if: IF cond_completa $@7 sentencia $@8 ELSE . $@9 sentencia $@10 ENDIF

    $default  reduce usando la regla 43 ($@9)

    $@9  ir al estado 151


estado 141

   48 if: IF cond_completa $@11 ELSE $@12 ENDIF .

    $default  reduce usando la regla 48 (if)


estado 142

   17 expr: expr . OP_SUMA termino
   18     | expr . OP_RESTA termino
   35 for: FOR VARIABLE OP_ASIG expr TO expr . CORCHETE_A CONST_INT CORCHETE_C $@3 sentencia NEXT VARIABLE
   37    | FOR VARIABLE OP_ASIG expr TO expr . $@4 sentencia NEXT VARIABLE

    CORCHETE_A  desplazar e ir al estado 152
    OP_SUMA     desplazar e ir al estado 60
    OP_RESTA    desplazar e ir al estado 61

    $default  reduce usando la regla 36 ($@4)

    $@4  ir al estado 153


estado 143

   86 tipo: INT .

    $default  reduce usando la regla 86 (tipo)


estado 144

   87 tipo: REAL .

    $default  reduce usando la regla 87 (tipo)


estado 145

   88 tipo: STRING .

    $default  reduce usando la regla 88 (tipo)


estado 146

   85 seg_asig: VARIABLE CORCHETE_C AS CORCHETE_A tipo .

    $default  reduce usando la regla 85 (seg_asig)


estado 147

   84 seg_asig: VARIABLE COMA seg_asig COMA tipo .

    $default  reduce usando la regla 84 (seg_asig)


estado 148

   67 cond_equ: expr $@16 PUNTO_COMA . CORCHETE_A lista CORCHETE_C

    CORCHETE_A  desplazar e ir al estado 154


estado 149

   63 equmax: EQU_MAX PARENTESIS_A cond_equ $@14 PARENTESIS_C .

    $default  reduce usando la regla 63 (equmax)


estado 150

   65 equmin: EQU_MIN PARENTESIS_A cond_equ $@15 PARENTESIS_C .

    $default  reduce usando la regla 65 (equmin)


estado 151

   45 if: IF cond_completa $@7 sentencia $@8 ELSE $@9 . sentencia $@10 ENDIF

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    sentencia  ir al estado 155
    grammar    ir al estado 11
    asig       ir al estado 12
    display    ir al estado 13
    get        ir al estado 14
    while      ir al estado 15
    for        ir al estado 16
    if         ir al estado 17
    dec_var    ir al estado 18


estado 152

   35 for: FOR VARIABLE OP_ASIG expr TO expr CORCHETE_A . CONST_INT CORCHETE_C $@3 sentencia NEXT VARIABLE

    CONST_INT  desplazar e ir al estado 156


estado 153

   37 for: FOR VARIABLE OP_ASIG expr TO expr $@4 . sentencia NEXT VARIABLE

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    sentencia  ir al estado 157
    grammar    ir al estado 11
    asig       ir al estado 12
    display    ir al estado 13
    get        ir al estado 14
    while      ir al estado 15
    for        ir al estado 16
    if         ir al estado 17
    dec_var    ir al estado 18


estado 154

   67 cond_equ: expr $@16 PUNTO_COMA CORCHETE_A . lista CORCHETE_C

    CONST_INT     desplazar e ir al estado 158
    CONST_REAL    desplazar e ir al estado 159
    VARIABLE      desplazar e ir al estado 160
    CONST_STRING  desplazar e ir al estado 161

    lista      ir al estado 162
    expr_list  ir al estado 163


estado 155

    3 sentencia: sentencia . grammar PUNTO_COMA
   45 if: IF cond_completa $@7 sentencia $@8 ELSE $@9 sentencia . $@10 ENDIF

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    $default  reduce usando la regla 44 ($@10)

    grammar  ir al estado 39
    asig     ir al estado 12
    display  ir al estado 13
    get      ir al estado 14
    while    ir al estado 15
    for      ir al estado 16
    if       ir al estado 17
    $@10     ir al estado 164
    dec_var  ir al estado 18


estado 156

   35 for: FOR VARIABLE OP_ASIG expr TO expr CORCHETE_A CONST_INT . CORCHETE_C $@3 sentencia NEXT VARIABLE

    CORCHETE_C  desplazar e ir al estado 165


estado 157

    3 sentencia: sentencia . grammar PUNTO_COMA
   37 for: FOR VARIABLE OP_ASIG expr TO expr $@4 sentencia . NEXT VARIABLE

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7
    NEXT      desplazar e ir al estado 166

    grammar  ir al estado 39
    asig     ir al estado 12
    display  ir al estado 13
    get      ir al estado 14
    while    ir al estado 15
    for      ir al estado 16
    if       ir al estado 17
    dec_var  ir al estado 18


estado 158

   70 expr_list: CONST_INT .

    $default  reduce usando la regla 70 (expr_list)


estado 159

   71 expr_list: CONST_REAL .

    $default  reduce usando la regla 71 (expr_list)


estado 160

   73 expr_list: VARIABLE .

    $default  reduce usando la regla 73 (expr_list)


estado 161

   72 expr_list: CONST_STRING .

    $default  reduce usando la regla 72 (expr_list)


estado 162

   67 cond_equ: expr $@16 PUNTO_COMA CORCHETE_A lista . CORCHETE_C
   69 lista: lista . COMA expr_list

    CORCHETE_C  desplazar e ir al estado 167
    COMA        desplazar e ir al estado 168


estado 163

   68 lista: expr_list .

    $default  reduce usando la regla 68 (lista)


estado 164

   45 if: IF cond_completa $@7 sentencia $@8 ELSE $@9 sentencia $@10 . ENDIF

    ENDIF  desplazar e ir al estado 169


estado 165

   35 for: FOR VARIABLE OP_ASIG expr TO expr CORCHETE_A CONST_INT CORCHETE_C . $@3 sentencia NEXT VARIABLE

    $default  reduce usando la regla 34 ($@3)

    $@3  ir al estado 170


estado 166

   37 for: FOR VARIABLE OP_ASIG expr TO expr $@4 sentencia NEXT . VARIABLE

    VARIABLE  desplazar e ir al estado 171


estado 167

   67 cond_equ: expr $@16 PUNTO_COMA CORCHETE_A lista CORCHETE_C .

    $default  reduce usando la regla 67 (cond_equ)


estado 168

   69 lista: lista COMA . expr_list

    CONST_INT     desplazar e ir al estado 158
    CONST_REAL    desplazar e ir al estado 159
    VARIABLE      desplazar e ir al estado 160
    CONST_STRING  desplazar e ir al estado 161

    expr_list  ir al estado 172


estado 169

   45 if: IF cond_completa $@7 sentencia $@8 ELSE $@9 sentencia $@10 ENDIF .

    $default  reduce usando la regla 45 (if)


estado 170

   35 for: FOR VARIABLE OP_ASIG expr TO expr CORCHETE_A CONST_INT CORCHETE_C $@3 . sentencia NEXT VARIABLE

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7

    sentencia  ir al estado 173
    grammar    ir al estado 11
    asig       ir al estado 12
    display    ir al estado 13
    get        ir al estado 14
    while      ir al estado 15
    for        ir al estado 16
    if         ir al estado 17
    dec_var    ir al estado 18


estado 171

   37 for: FOR VARIABLE OP_ASIG expr TO expr $@4 sentencia NEXT VARIABLE .

    $default  reduce usando la regla 37 (for)


estado 172

   69 lista: lista COMA expr_list .

    $default  reduce usando la regla 69 (lista)


estado 173

    3 sentencia: sentencia . grammar PUNTO_COMA
   35 for: FOR VARIABLE OP_ASIG expr TO expr CORCHETE_A CONST_INT CORCHETE_C $@3 sentencia . NEXT VARIABLE

    DIM       desplazar e ir al estado 1
    WHILE     desplazar e ir al estado 2
    IF        desplazar e ir al estado 3
    GET       desplazar e ir al estado 4
    DISPLAY   desplazar e ir al estado 5
    VARIABLE  desplazar e ir al estado 6
    FOR       desplazar e ir al estado 7
    NEXT      desplazar e ir al estado 174

    grammar  ir al estado 39
    asig     ir al estado 12
    display  ir al estado 13
    get      ir al estado 14
    while    ir al estado 15
    for      ir al estado 16
    if       ir al estado 17
    dec_var  ir al estado 18


estado 174

   35 for: FOR VARIABLE OP_ASIG expr TO expr CORCHETE_A CONST_INT CORCHETE_C $@3 sentencia NEXT . VARIABLE

    VARIABLE  desplazar e ir al estado 175


estado 175

   35 for: FOR VARIABLE OP_ASIG expr TO expr CORCHETE_A CONST_INT CORCHETE_C $@3 sentencia NEXT VARIABLE .

    $default  reduce usando la regla 35 (for)
